[pytest]
markers =
    interactive: marks tests as interactive (long-running, requires manual interaction)
    integration: marks tests as integration tests (require live services)
    performance: marks tests as performance tests (load testing, benchmarks)
    benchmark: marks tests as benchmark tests (regression detection)
    unit: marks tests as unit tests (fast, isolated)
    email: marks tests related to email functionality
    calendar: marks tests related to calendar functionality
    api: marks tests related to API endpoints
    security: marks tests related to security features
    slow: marks tests that are known to be slow (> 5 seconds)

# Test discovery settings
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output settings
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --verbose
    --color=yes
    --durations=10
    --maxfail=5
    --disable-warnings

# Minimum version requirements
minversion = 6.0

# Test collection settings
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Performance settings
timeout = 300
timeout_method = thread

# Coverage settings (if pytest-cov is installed)
# addopts = --cov=src --cov-report=html --cov-report=term-missing

# Parallel execution settings (if pytest-xdist is installed)
# addopts = -n auto

# Test filtering examples:
# Run only fast tests: pytest -m "not slow"
# Run only unit tests: pytest -m unit
# Run email tests: pytest -m email
# Run performance tests: pytest -m performance
# Skip integration tests: pytest -m "not integration" 